{"version":3,"sources":["components/ContactFilter.js","components/NewContactForm.js","components/ContactPerson.js","components/ContactList.js","services/phonebook.js","components/Notification.js","App.js","index.js"],"names":["Filter","searchPhrase","handleSearchChange","value","onChange","NewContactForm","newName","newNumber","submitNewContact","handleNameChange","handleNumberChange","onSubmit","type","ContactPerson","id","name","number","deleteContact","onClick","ContactList","persons","length","map","person","phonebookService","getAll","axios","get","baseApiUrl","then","response","data","addContact","newContact","post","delete","updateContact","contact","put","Notification","code","message","className","App","useState","setPersons","allContacts","setAllContacts","setNewName","setNewNumber","setSearchPhrase","notificationCode","setNotificationCode","notificationMsg","setNotificationMsg","useEffect","catch","error","console","log","filterContacts","phonebook","query","filter","toLowerCase","includes","refreshPhonebook","updatedPhonebook","displayNotification","setTimeout","notificationDisplayDuration","event","preventDefault","find","window","confirm","updatedContact","createdContact","status","concat","target","ContactFilter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d6942da.chunk.js","sourcesContent":["const Filter = ({searchPhrase, handleSearchChange}) => {\r\n    return(\r\n        <div>\r\n            Filter contacts shown with <input value={searchPhrase} onChange={handleSearchChange}/>\r\n        </div>\r\n        );\r\n}\r\nexport default Filter;","const NewContactForm = ({newName,newNumber, submitNewContact, handleNameChange, handleNumberChange }) => {\r\n    return(      \r\n    <form onSubmit={submitNewContact}>\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td>\r\n                Name:\r\n              </td>\r\n              <td>\r\n                <input value={newName} onChange={handleNameChange}/>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                Number: \r\n              </td>\r\n              <td>\r\n                <input value={newNumber} onChange={handleNumberChange}/>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td/>\r\n              <td>\r\n                <button type=\"submit\">Add</button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </form>);\r\n}\r\nexport default NewContactForm;\r\n","const ContactPerson = ({id, name, number, deleteContact}) => {\r\n    return (\r\n        <tr key={id}>\r\n            <td> {name} </td>\r\n            <td> {number} </td>\r\n            <td><button onClick={()=>deleteContact(id, name)}>Delete</button></td>\r\n        </tr>\r\n    );\r\n}\r\nexport default ContactPerson;","import ContactPerson from './ContactPerson'\r\nconst ContactList = ({persons, deleteContact}) => {\r\n    return(\r\n        <table>\r\n            <tbody>\r\n            {persons.length? persons.map((person)=> \r\n                <ContactPerson \r\n                    key={person.id} \r\n                    id={person.id} \r\n                    name={person.name} \r\n                    number={person.number}\r\n                    deleteContact={deleteContact}/>)\r\n                :<tr><td> No contacts matching searched filter. </td></tr>}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\nexport default ContactList;\r\n","import axios from 'axios';\r\nconst baseApiUrl = '/api';\r\n\r\nconst getAll = () => {\r\n    const req = axios.get(baseApiUrl+'/persons');\r\n    return req.then(response => response.data);\r\n}\r\n\r\nconst addContact = (newContact)=>{\r\n    const req = axios.post(baseApiUrl+'/persons', newContact);\r\n    return req.then(response => response.data);\r\n}\r\n\r\nconst deleteContact = (id)=>{\r\n    const req = axios.delete(baseApiUrl + '/persons/' + id);\r\n    return req.then(response => response.data);\r\n}\r\n\r\nconst updateContact = (contact)=>{\r\n    const req = axios.put(baseApiUrl+'/persons/'+contact.id, contact);\r\n    return req.then(response => response.data);\r\n}\r\n\r\nconst phonebookService = { getAll, addContact, deleteContact, updateContact };\r\n\r\nexport default phonebookService;","const Notification = ({code, message}) => {\r\n    // codes - \r\n    // 0 - neutral message - alert to user (neutral colours)\r\n    // 1 - Positive messages - creation, edits, etc. (positive colours)\r\n    // 2 - Negative messages - deletion, errors, etc. (negative colours)\r\n    // console.log('notification updated')\r\n\r\n    if (code === 1){\r\n        // console.log('code = 1')\r\n        return(\r\n                <div className='positiveAlert'>\r\n                    {message}\r\n                </div>\r\n        );\r\n    }\r\n    else if (code ===2){\r\n        // console.log('code = 2')\r\n\r\n        return(\r\n            <div className='negativeAlert'>\r\n                {message}\r\n            </div>\r\n        );\r\n    }\r\n    else if (code ===3){\r\n        // console.log('code = 3')\r\n\r\n        return(\r\n            <div className='neutralAlert'>\r\n                    {message}\r\n            </div>\r\n        );\r\n    }\r\n    // console.log('code = other')\r\n\r\n    //  any other code passed, return empty.\r\n    return(<></>);\r\n}\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect } from 'react'\r\nimport ContactFilter from './components/ContactFilter'\r\nimport NewContactForm from './components/NewContactForm'\r\nimport ContactList from './components/ContactList'\r\nimport phonebookService from './services/phonebook'\r\nimport Notification from './components/Notification'\r\nimport  './App.css'\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([]);\r\n  const [allContacts,setAllContacts] = useState([]);\r\n\r\n  const [ newName, setNewName ] = useState('');\r\n  const [ newNumber, setNewNumber] = useState('');\r\n  const [ searchPhrase, setSearchPhrase] = useState('');\r\n  const [notificationCode, setNotificationCode] = useState(-1);\r\n  const [notificationMsg, setNotificationMsg] = useState('');\r\n\r\n  // Notifications display time in seconds.\r\n  const notificationDisplayDuration = 3;\r\n\r\n  // load contacts from API on load\r\n  useEffect(() =>{\r\n    phonebookService\r\n      .getAll()\r\n      .then((data)=>{\r\n        setAllContacts(data);\r\n        setPersons(data);\r\n      })\r\n      .catch(error =>{\r\n        console.log(error);\r\n        setNotificationCode(2);\r\n        setNotificationMsg('Cannot contact server. Refresh page to try again.');\r\n    });\r\n  },[])\r\n\r\n  // Functions to handle input in textboxes\r\n  const handleNameChange = (event) => setNewName(event.target.value);\r\n  const handleNumberChange = (event) => setNewNumber(event.target.value);\r\n  \r\n  const handleSearchChange = (event) => {\r\n    var query = event.target.value;\r\n    setSearchPhrase(query);    \r\n    filterContacts(allContacts, query);\r\n  }\r\n  \r\n  //Function to filter names by search query.\r\n  const filterContacts = (phonebook,query) => {\r\n    setPersons(phonebook.filter(person => person.name.toLowerCase().includes(query.toLowerCase())));\r\n  }\r\n\r\n  const refreshPhonebook = (updatedPhonebook) =>{\r\n    //Update persons object with new contact details. generate new id. \r\n    setAllContacts(updatedPhonebook);\r\n    // clear text fields in the form\r\n    setNewName('');\r\n    setNewNumber('');\r\n    //Filter according to the search query\r\n    filterContacts(updatedPhonebook, searchPhrase);\r\n\r\n  }\r\n\r\n  const displayNotification = (code, message)=>{\r\n    setNotificationCode(code);\r\n    setNotificationMsg(message);\r\n    setTimeout(() => {\r\n      setNotificationCode(-1);\r\n      setNotificationMsg('');\r\n    }, notificationDisplayDuration*1000);\r\n  }\r\n  \r\n\r\n  const submitNewContact = (event)=>{\r\n    event.preventDefault();\r\n    \r\n    // Checking if contact already exists in phonebook\r\n    if (allContacts.find(person => person.name===newName)){\r\n      if(window.confirm(`${newName} is already added to the phonebook. Replace the old number with the new one?`)){\r\n        var updatedContact = allContacts.find(contact=> contact.name===newName);\r\n        updatedContact.number = newNumber;\r\n        phonebookService\r\n          .updateContact(updatedContact)\r\n          .then((createdContact) =>{\r\n            refreshPhonebook(allContacts.map((contact)=>contact.id!==createdContact.id?contact:createdContact));\r\n            displayNotification(1,`Contact details for ${createdContact.name} updated successfully.`)\r\n          })\r\n          .catch(error =>{\r\n            // Entry already deleted in server\r\n            if(error.response.status === 404){\r\n              displayNotification(2,`${updatedContact.name} has already been removed from the server.`)\r\n              refreshPhonebook(allContacts.filter(contact => contact.id!==updatedContact.id))\r\n              return;\r\n            }\r\n            displayNotification(2,'Cannot update contact. ');\r\n          });\r\n      }\r\n      return;\r\n    }\r\n    var newContact = { name:newName, number:newNumber};\r\n\r\n    phonebookService\r\n      .addContact(newContact)\r\n      .then((createdContact) => {\r\n        refreshPhonebook(allContacts.concat([createdContact]));\r\n        displayNotification(1,`Added ${createdContact.name} successfully.`);\r\n      })\r\n      .catch(error =>{            \r\n        displayNotification(2,'Cannot create contact.');\r\n      });\r\n    }\r\n\r\n    const deleteContact = (id, name) =>{\r\n     if (window.confirm(`Delete ${name}?`)){\r\n      phonebookService\r\n        .deleteContact(id)\r\n        .then(response =>{\r\n          var name = allContacts.filter(contact => contact.id ===  id)[0].name;\r\n          var updatedPhonebook = allContacts.filter(contact => contact.id !== id);\r\n          setAllContacts(updatedPhonebook);\r\n          filterContacts(updatedPhonebook,searchPhrase);\r\n          displayNotification(1, `Contact details of ${name} successfully removed from phonebook.`)\r\n        })\r\n          .catch(error=>{\r\n            displayNotification(2,'Cannot delete contact.');\r\n          });\r\n     }\r\n    }\r\n  \r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification code={notificationCode} message={notificationMsg} />\r\n      <h3>Add new contact</h3>\r\n      <NewContactForm \r\n        newName = {newName} \r\n        newNumber = {newNumber} \r\n        submitNewContact = {submitNewContact} \r\n        handleNameChange = {handleNameChange} \r\n        handleNumberChange = {handleNumberChange}/>\r\n\r\n      <h2>Numbers</h2>\r\n      <ContactFilter searchPhrase={searchPhrase} handleSearchChange={handleSearchChange}/>\r\n      <ContactList persons={persons} deleteContact={deleteContact}/>\r\n    </div>\r\n  )\r\n}\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}